[[plugins]]
repo = 'junegunn/vim-emoji'
hook_post_source = '''
    set completefunc=emoji#complete
'''

[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['md', 'markdown']
hook_source = '''
    let g:vim_markdown_folding_disabled=1
'''

[[plugins]]
repo = 'github/copilot.vim'
hook_source = '''
    let g:copilot_filetypes = {
    \ 'markdown': v:true,
    \ 'yaml': v:true,
    \ 'text': v:true,
    \ }
'''

[[plugins]]
repo = 'vim-scripts/dbext.vim'
on_ft = 'sql'

[[plugins]]
repo = 'ekalinin/Dockerfile.vim'
on_ft = 'dockerfile'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
    let g:rustfmt_autosave=1
'''

[[plugins]]
repo = 'sebastianmarkow/deoplete-rust'
on_ft = 'rust'
depends = ['deoplete.nvim']
hook_source = '''
    let g:deoplete#sources#rust#racer_binary=systemlist('which racer')[0]
    let g:deoplete#sources#rust#rust_source_path=systemlist('rustc --print sysroot')[0] . '/lib/rustlib/src/rust/src'
    let g:deoplete#sources#rust#show_duplicates=1
    let g:deoplete#sources#rust#disable_keymap=1
    nmap <buffer> gd <plug>DeopleteRustGoToDefinitionDefault
    nmap <buffer> K  <plug>DeopleteRustShowDocumentation
'''

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = 'rust'
hook_source = '''
    let g:racer_cmd=systemlist('which racer')[0]
    let $RUST_SRC_PATH=systemlist('rustc --print sysroot')[0] . '/lib/rustlib/src/rust/src'
'''

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = ['hcl', 'tf', 'terraform']
hook_source = '''
    let g:terraform_fmt_on_save=1
'''

[[plugins]]
repo = 'vim-syntastic/syntastic'

[[plugins]]
repo = 'juliosueiras/vim-terraform-completion'
on_ft = 'terraform'
depends = ['syntastic', 'vim-terraform']
hook_add = '''
    let g:deoplete#omni_patterns = {}
    let g:deoplete#omni_patterns.terraform = '[^ *\t"{=$]\w*'
    let g:deoplete#enable_at_startup = 1
'''
hook_post_source = '''
    call deoplete#initialize()
'''

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'wakatime/vim-wakatime'
on_event = ['BufRead']
